'use client';

import React, { useState } from 'react';
import dynamic from 'next/dynamic';
import { useRouter, usePathname, useSearchParams } from 'next/navigation';
import Button from '@/components/common/Button';
import { Plus as FaPlus } from 'lucide-react';

const Tabs = dynamic(() => import('@/components/common/Tabs'), { 
    loading: () => <div className="h-10 bg-gray-200 rounded animate-pulse"></div> 
});

const tabs = [
    { value: 0, label: 'Ù†Ø¸Ø±Ø© Ø¹Ø§Ù…Ø©', path: '/student/paths/overview' },
    { value: 1, label: 'Ø§Ù„Ø¯ÙˆØ±Ø§Øª', path: '/student/paths/overview?type=courses' },
    { value: 2, label: 'Ø§Ù„ØªÙ‚Ø¯Ù…', path: '/student/paths/overview?type=progress' },
    { value: 3, label: 'Ø§Ù„Ø²Ù…Ù„Ø§Ø¡', path: '/student/paths/overview?type=peers' },
];

export default function PathsOverviewLayout({
    children,
    overview,
    courses,
    progress,
    peers,
}: {
    children: React.ReactNode;
    overview: React.ReactNode;
    courses: React.ReactNode;
    progress: React.ReactNode;
    peers: React.ReactNode;
}) {
    const router = useRouter();
    const pathname = usePathname();
    const searchParams = useSearchParams();
    const activeTab = searchParams.get('type') || '0';
    
    // ØªØ­Ø¯ÙŠØ¯ Ø§Ù„ØªØ¨ÙˆÙŠØ¨ Ø§Ù„Ù†Ø´Ø· Ø¨Ù†Ø§Ø¡Ù‹ Ø¹Ù„Ù‰ Ø§Ù„Ù…Ø³Ø§Ø± Ø§Ù„Ø­Ø§Ù„ÙŠ
    const getActiveTab = () => {
        if (pathname.includes('/courses')) return 1;
        if (pathname.includes('/progress')) return 2;
        if (pathname.includes('/peers')) return 3;
        return 0;
    };

    // const activeTab = getActiveTab();

    const handleTabChange = (value: number) => {
        const tab = tabs.find(t => t.value === value);
        if (tab) {
            router.push(tab.path);
        }
    };

    return (
        <div className="space-y-6">
            {/* Ø§Ù„Ø¹Ù†ÙˆØ§Ù† ÙˆØ§Ù„Ø¨Ø­Ø« */}
            <div className="flex items-center justify-between">
                <div>
                    <h1 className="text-2xl font-bold">Ù…Ø³Ø§Ø±Ø§ØªÙƒ Ø§Ù„Ø­Ø§Ù„ÙŠØ© ðŸ‘‹</h1>
                    <p className="text-gray-600">
                        ØªÙ‚Ø¯Ø± ØªØ¨Ø¯Ø£ Ø£Ùˆ ØªØªØ§Ø¨Ø¹ Ø£ÙŠ Ù…Ø³Ø§Ø± ØªØ¹Ù„Ù… ÙŠÙ†Ø§Ø³Ø¨Ùƒ
                    </p>
                </div>
                <Button variant="contained" size="large">
                    Ø§Ù†Ø¶Ù… Ù„Ù…Ø³Ø§Ø± Ø¬Ø¯ÙŠØ¯
                </Button>
            </div>

            {/* Ø§Ù„ØªØ¨ÙˆÙŠØ¨Ø§Øª */}
            <Tabs
                value={Number(activeTab)}
                onChange={handleTabChange}
                tabs={tabs.map(tab => ({
                    value: tab.value,
                    label: tab.label,
                    content: <></>
                }))}
            />

            {/* Ø§Ù„Ù…Ø­ØªÙˆÙ‰ */}
            <div className="min-h-[400px]">
                {activeTab === '0' && overview}
                {activeTab === '1' && courses}
                {activeTab === '2' && progress}
                {activeTab === '3' && peers}
            </div>
        </div>
    );
} 